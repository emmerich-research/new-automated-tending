# ----------------------------------------------------------
# Emmerich Tending App Configurations
# github.com/rayandrews
# <raydreww@gmail.com>
#
# This configuration contains :
# - General
# - Devices
# - Mechanisms
#   - Fault
#   - Homing
#   - Spraying
#   - Tending
#   - Cleaning
#
# Each mechanism has its own speed profile (slow, medium, fast)
# that can be changed using UI/HMI
# ----------------------------------------------------------

[general]
name                         = "Emmerich Tending App"
debug                        = true # will log all debugging things

[devices]

# ----------------------------------------------------------
# Stepper Configuration
#
# Brief:
# Stepper consisted of at least 2 pins :
# - Step Pin
# - Dir Pin
#
# However there are exists other pins (specifically
# to its driver), such as :
# - Enable Pin
# - Microstep Pin (can be 3 for Pololu A4988,
#   denotes as MS1, MS2, MS3)
#
# Notes :
# RPM, acceleration, and deceleration can be set here
# this default configuration will be used for homing
# and other basic movements
# (such as moving to spray position, etc)
# ----------------------------------------------------------
[devices.stepper]
type                         = "A4988"

# stepper x-axis
[devices.stepper.x]
key                          = "STEPPER-X"
step-pin                     = 6
step-active-state            = true
dir-pin                      = 13
dir-active-state             = true
enable-pin                   = 9
enable-active-state          = true
steps-per-mm                 = 40
microsteps                   = 8

# stepper y-axis
[devices.stepper.y]
key                          = "STEPPER-Y"
step-pin                     = 11
step-active-state            = true
dir-pin                      = 5
dir-active-state             = false
enable-pin                   = 9
enable-active-state          = true
steps-per-mm                 = 40
microsteps                   = 8

# stepper z-axis
[devices.stepper.z]
key                          = "STEPPER-Z"
step-pin                     = 19
step-active-state            = true
dir-pin                      = 26
dir-active-state             = false
enable-pin                   = 9
enable-active-state          = true
steps-per-mm                 = 40
microsteps                   = 8

# ----------------------------------------------------------
# End of Stepper Configuration
# ----------------------------------------------------------

[devices.finger]

[devices.finger.motor]
# default range 0 - 255
key                          = "FINGER"
pin                          = 18
active-state                 = true

[devices.finger.brake]
# will be pulled down
key                          = "FINGER-BRAKE"
pin                          = 20
active-state                 = true
duration                     = 200 # in milliseconds

[devices.finger.infrared]
key                          = "FINGER-IR"
pin                          = 12
active-state                 = false

# ----------------------------------------------------------
# Limit Switch
#
# Brief: This will prevent any mechanical and software issues
# that will make the machine `out of its path`
# ----------------------------------------------------------
[devices.limit-switch]
# notes that this needs to be pulled up via Raspberry PI PIN
# and the logic needs to be flipped (active-state = false)

type                         = "input"

# limit switch x-axis
[devices.limit-switch.x]
key                          = "LIMIT-X"
pin                          = 2
active-state                 = false

# limit switch y-axis
[devices.limit-switch.y]
key                          = "LIMIT-Y"
pin                          = 8
active-state                 = false

# limit switch z-axis upper bound (top)
[devices.limit-switch.z1]
key                          = "LIMIT-Z1"
pin                          = 15
active-state                 = false

# limit switch z-axis lower bound (bottom)
[devices.limit-switch.z2]
key                          = "LIMIT-Z2"
pin                          = 16
active-state                 = false

# limit switch for finger protection
[devices.limit-switch.finger-protection]
key                          = "LIMIT-FINGER-PROTECTION"
pin                          = 3
active-state                 = false
# ----------------------------------------------------------
# End of Limit Switch
# ----------------------------------------------------------

# ----------------------------------------------------------
# PLC to PI Communication
#
# Brief: Communication between PLC to RaspberryPI
# ----------------------------------------------------------
[devices.plc-to-pi]
[devices.plc-to-pi.spraying-tending-height]
key                          = "INPUT-PLC-SPRAYING-TENDING-HEIGHT"
pin                          = 14
active-state                 = true

[devices.plc-to-pi.cleaning-height]
key                          = "INPUT-PLC-CLEANING-HEIGHT"
pin                          = 17
active-state                 = true

[devices.plc-to-pi.reset]
key                          = "INPUT-PLC-RESET"
pin                          = 27
active-state                 = true

[devices.plc-to-pi.e-stop]
key                          = "INPUT-PLC-E-STOP"
pin                          = 10
active-state                 = true

# ----------------------------------------------------------
# End of Communication
# ----------------------------------------------------------

# shift register
[devices.shift-register]
latch-pin                    = 4
clock-pin                    = 23
data-pin                     = 22

# communication from RaspberryPI to PLC
# notes that this needs to be pulled up via Raspberry PI PIN
# and the logic needs to be flipped (active-state = false)

# ----------------------------------------------------------
# RasPi to Cleaning Station
# ----------------------------------------------------------
[devices.shift-register.water-in]
key                          = "SR-WATER-IN"
address                      = 0
active-state                 = true

[devices.shift-register.water-out]
key                          = "SR-WATER-OUT"
address                      = 1
active-state                 = true

[devices.shift-register.disinfectant-in]
key                          = "SR-DISINFECTANT-IN"
address                      = 2
active-state                 = true

[devices.shift-register.disinfectant-out]
key                          = "SR-DISINFECTANT-OUT"
address                      = 3
active-state                 = true

[devices.shift-register.sonicator-relay]
key                          = "SR-SONICATOR-RELAY"
address                      = 4
active-state                 = true
# ----------------------------------------------------------
# End of RasPi to Cleaning Station
# ----------------------------------------------------------

# ----------------------------------------------------------
# RasPi to PLC
# ----------------------------------------------------------
[devices.shift-register.tending-ready]
key                          = "SR-TENDING-READY"
address                      = 8
active-state                 = true

[devices.shift-register.spraying-ready]
key                          = "SR-SPRAYING-READY"
address                      = 9
active-state                 = true

[devices.shift-register.tending-running]
key                          = "SR-TENDING-RUNNING"
address                      = 10
active-state                 = true

[devices.shift-register.spraying-running]
key                          = "SR-SPRAYING-RUNNING"
address                      = 11
active-state                 = true

[devices.shift-register.tending-complete]
key                          = "SR-TENDING-COMPLETE"
address                      = 12
active-state                 = true

[devices.shift-register.spraying-complete]
key                          = "SR-SPRAYING-COMPLETE"
address                      = 13
active-state                 = true

[devices.shift-register.spray]
key                          = "SPRAY"
address                      = 14
active-state                 = true
# ----------------------------------------------------------
# End of RasPi to PLC
# ----------------------------------------------------------

# ----------------------------------------------------------
# Float Sensor
# ----------------------------------------------------------
[devices.float-sensor]

[devices.float-sensor.water-level]
key                          = "FLOAT-WATER-LEVEL"
pin                          = 25
active-state                 = false

[devices.float-sensor.disinfectant-level]
key                          = "FLOAT-DISINFECTANT-LEVEL"
pin                          = 21
active-state                 = false
# ----------------------------------------------------------
# End of Ultrasonic Distance Sensor
# ----------------------------------------------------------

# --------------------------------------------------
# Sonicator Relay
#
# Will be pulled down
# --------------------------------------------------
[devices.sonicator-relay]
key                          = "SONICATOR-RELAY"
pin                          = 7
active-state                 = true
# ----------------------------------------------------------
# End of Sonicator Relay
# ----------------------------------------------------------

[mechanisms]

# ----------------------------------------------------------
# Fault Mechanism
# Brief :
# - Stopping all motors
# - Motors will be active if manual mode are true (check UI/HMI)
# ----------------------------------------------------------
[mechanisms.fault]
# tasks timeout in seconds
timeout                      = 40

[mechanisms.fault.manual.movement]
# movement of manual mode in mm
x                            = 50.0
y                            = 50.0
z                            = 20.0

[mechanisms.fault.manual.speed.slow]
[mechanisms.fault.manual.speed.slow.x]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.fault.manual.speed.slow.y]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.fault.manual.speed.slow.z]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.fault.manual.speed.normal]
[mechanisms.fault.manual.speed.normal.x]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.fault.manual.speed.normal.y]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.fault.manual.speed.normal.z]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.fault.manual.speed.fast]
[mechanisms.fault.manual.speed.fast.x]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

[mechanisms.fault.manual.speed.fast.y]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

[mechanisms.fault.manual.speed.fast.z]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

# ----------------------------------------------------------
# Homing Mechanism
#
# For finger :
# Will try to homing finger until finger infrared is high
# ----------------------------------------------------------
[mechanisms.homing]

[mechanisms.homing.finger]

[mechanisms.homing.speed.slow]
duty-cycle                   = 100

[mechanisms.homing.speed.slow.x]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.homing.speed.slow.y]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.homing.speed.slow.z]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.homing.speed.normal]
duty-cycle                   = 100

[mechanisms.homing.speed.normal.x]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.homing.speed.normal.y]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.homing.speed.normal.z]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.homing.speed.fast]
duty-cycle                   = 100

[mechanisms.homing.speed.fast.x]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

[mechanisms.homing.speed.fast.y]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

[mechanisms.homing.speed.fast.z]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

# ----------------------------------------------------------
# Spraying Mechanism
#
# Brief :
# This will do these phases :
# - Homing
# - Moving to initial position
# - Spray on
# - Do path
# - Move little bit to side
# - Spray off
# - Homing
# ----------------------------------------------------------
[mechanisms.spraying]
# initial position according to limit switch homing
position                     = [10.0, 245.0]

# coordinates after changing `imaginary homing` to
# initial position of spraying
path                         = [
  # x   y  (in mm, need to be in floating point)

  # zigzag
  [0.0,  0.0],
  [740.0, 0.0],
  [740.0, 85.0],
  [0.0,  85.0],
  [0.0,  170.0],
  [740.0, 170.0],
  [740.0, 255.0],
  [0.0,  255.0],
  [0.0,  340.0],
  [810.0, 340.0],
  [810.0, 425.0],
  [0.0,  425.0],
  # [0.0,  550.0],
  # [810.0, 550.0],
]

[mechanisms.spraying.speed.slow]
[mechanisms.spraying.speed.slow.x]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.spraying.speed.slow.y]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.spraying.speed.slow.z]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.spraying.speed.normal]
[mechanisms.spraying.speed.normal.x]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.spraying.speed.normal.y]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.spraying.speed.normal.z]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.spraying.speed.fast]
[mechanisms.spraying.speed.fast.x]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

[mechanisms.spraying.speed.fast.y]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

[mechanisms.spraying.speed.fast.z]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2
# ----------------------------------------------------------
# End of Spraying Mechanism
# ----------------------------------------------------------

# ----------------------------------------------------------
# Tending Mechanism
#
# Brief :
# This will do these phases :
# - Homing
# - Moving to initial position
# - Finger Down
# - Do edge path
# - Finger motor start
# - Do zigzag path
# - Finger motor stop
# - Homing
# ----------------------------------------------------------
[mechanisms.tending]
# initial position according to limit switch homing
position                     = [105.0, 155.0]

[mechanisms.tending.path]
# coordinates after changing `imaginary homing` to
# initial position of spraying
# this needs to be splitted between edge and zigzag
# because finger motor will be on after edge has been
# done
edge                         = [
  # x    y  (in mm, need to be in floating point)
  [0.0,   0.0],
]

zigzag                       = [
  # x    y  (in mm, need to be in floating point)
  [0.0,  195.0],
  [0.0,  260.0],
  [805.0, 260.0],
  [805.0, 325.0],
  [0.0, 325.0],
  [0.0, 390.0],
  [805.0, 390.0],
  [805.0, 505.0],
  [0.0, 505.0],
  # [805.0, 455.0],
  # [805.0, 0.0],
  # [735.0, 0.0],
  # [735.0, 455.0],
  # [665.0, 455.0],
  # [665.0, 0.0],
  # [595.0, 0.0],
  # [595.0, 455.0],
  # [525.0, 455.0],
  # [525.0, 0.0],
  # [455.0, 0.0],
  # [455.0, 455.0],
  # [385.0, 455.0],
  # [385.0, 0.0],
  # [315.0, 0.0],
  # [315.0, 455.0],
  # [245.0, 455.0],
  # [245.0, 0.0],
  # [175.0, 0.0],
  # [175.0, 455.0],
  # [105.0 , 455.0],
  # [105.0 , 0.0],
  # [50.0 , 0.0],
  # [50.0 , 455.0],
  # [0.0 , 455.0],
  # [0.0 , 0.0],
  # [250.0, 0.0],
]

[mechanisms.tending.speed.slow]
duty-cycle                   = 160

[mechanisms.tending.speed.slow.x]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.tending.speed.slow.y]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.tending.speed.slow.z]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.tending.speed.normal]
duty-cycle                   = 180

[mechanisms.tending.speed.normal.x]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.tending.speed.normal.y]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.tending.speed.normal.z]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.tending.speed.fast]
duty-cycle                   = 200

[mechanisms.tending.speed.fast.x]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

[mechanisms.tending.speed.fast.y]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

[mechanisms.tending.speed.fast.z]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2
# ----------------------------------------------------------
# End of Tending Mechanism
# ----------------------------------------------------------

# ----------------------------------------------------------
# Cleaning Mechanism
#
# Brief :
# This will do these phases :
# - Move into station
# - Lower Finger
# - Wait N seconds
# - Lift finger
# - Next station ...
# - Homing
# ----------------------------------------------------------
[mechanisms.cleaning]

stations = [
  # x      y        wait (s)  sonicator state
  [110.0,   1140.0,   3,        true],          # water
  [890.0,  1130.0,    3,        false],         # disinfectant
]

[mechanisms.cleaning.speed.slow]
[mechanisms.cleaning.speed.slow.x]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.cleaning.speed.slow.y]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.cleaning.speed.slow.z]
rpm                          = 100.0
acceleration                 = 3000.0 # steps / s^2
deceleration                 = 3000.0 # steps / s^2

[mechanisms.cleaning.speed.normal]
[mechanisms.cleaning.speed.normal.x]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.cleaning.speed.normal.y]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.cleaning.speed.normal.z]
rpm                          = 150.0
acceleration                 = 4500.0 # steps / s^2
deceleration                 = 4500.0 # steps / s^2

[mechanisms.cleaning.speed.fast]
[mechanisms.cleaning.speed.fast.x]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

[mechanisms.cleaning.speed.fast.y]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

[mechanisms.cleaning.speed.fast.z]
rpm                          = 200.0
acceleration                 = 6000.0 # steps / s^2
deceleration                 = 6000.0 # steps / s^2

[mechanisms.liquid-refilling]

[mechanisms.liquid-refilling.water]
draining-time                = 10 # in seconds

[mechanisms.liquid-refilling.disinfectant]
draining-time                = 10 # in seconds
